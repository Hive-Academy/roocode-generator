name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-npm-
      - name: Install Dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run lint
      - run: npm run format
      - run: npm run type-check # Added type checking
      - run: npm run build # Added build step
      - name: Cache dist directory
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-build-${{ hashFiles('**/package-lock.json', 'src/**/*.ts', 'vite.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-build-
      - run: npm run test # Ensure tests run after build

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org/'
      - name: Cache node modules
        id: cache-npm-release
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-20.x-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20.x-npm-
      - name: Install Dependencies
        if: steps.cache-npm-release.outputs.cache-hit != 'true'
        run: npm ci
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
