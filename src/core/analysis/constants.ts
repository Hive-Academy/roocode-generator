/**
 * Constants used for project analysis, defining files and directories to include or exclude.
 */

// Common binary file extensions to skip analysis
export const BINARY_EXTENSIONS = new Set([
  '.jpg',
  '.jpeg',
  '.png',
  '.gif',
  '.ico',
  '.pdf',
  '.zip',
  '.tar',
  '.gz',
  '.7z',
  '.rar',
  '.exe',
  '.dll',
  '.so',
  '.dylib',
  '.woff',
  '.woff2',
  '.ttf',
  '.otf',
  '.eot',
  '.mp3',
  '.wav',
  '.ogg',
  '.mp4',
  '.webm',
  '.avi',
  '.mov',
  '.wmv',
  '.flv',
  '.mkv',
  '.class',
  '.jar',
  '.war',
  '.ear',
  '.pyc',
  '.pyo',
  '.o',
  '.a',
  '.obj',
  '.lib',
  '.pdb',
  '.DS_Store',
]);

// Directories to skip during analysis
export const SKIP_DIRECTORIES = new Set([
  'node_modules',
  '.git',
  'dist',
  'build',
  'coverage',
  'vendor',
  'tmp',
  'temp',
  '.svn',
  '.hg',
  '.idea',
  '.vscode',
  '__pycache__',
  'target',
  'bin',
  'obj',
]);

// File extensions relevant for analysis
export const ANALYZABLE_EXTENSIONS = new Set([
  // Web & JS/TS
  '.js',
  '.jsx',
  '.ts',
  '.tsx',
  '.mjs',
  '.cjs',
  '.json',
  '.html',
  '.htm',
  '.css',
  '.scss',
  '.sass',
  '.less',
  '.styl',
  '.vue',
  '.svelte',
  '.astro',
  // Config & Markup
  '.yml',
  '.yaml',
  '.xml',
  '.toml',
  '.ini',
  '.properties',
  '.md',
  '.markdown',
  '.sh',
  '.bash',
  '.zsh',
  '.ps1',
  '.bat',
  '.cmd',
  'Dockerfile',
  '.dockerignore',
  '.gitignore',
  '.npmignore',
  '.editorconfig',
  '.prettierrc',
  '.eslintrc',
  '.babelrc',
  '.tsconfig',
  '.package.json',
  'composer.json',
  'Gemfile',
  'requirements.txt',
  'Pipfile',
  // Backend Languages
  '.py',
  '.java',
  '.rb',
  '.php',
  '.go',
  '.cs',
  '.swift',
  '.kt',
  '.kts',
  '.rs',
  '.c',
  '.cpp',
  '.h',
  '.hpp',
  '.scala',
  '.clj',
  '.cljs',
  '.cljc',
  '.edn',
  '.pl',
  '.pm',
  '.lua',
  '.sql',
  '.r',
  '.dart',
  '.ex',
  '.exs',
  '.erl',
  '.hrl',
  // Add more as needed
]);

// Filenames to always consider (even without standard extensions)
export const ANALYZABLE_FILENAMES = new Set([
  'package.json',
  'tsconfig.json',
  'angular.json',
  'webpack.config.js',
  'vite.config.ts',
  'jest.config.js',
  'babel.config.js',
  'postcss.config.js',
  'tailwind.config.js',
  'docker-compose.yml',
  'Makefile',
  'pom.xml',
  'build.gradle',
  'settings.gradle',
  'Cargo.toml',
  'setup.py',
  'pyproject.toml',
  'go.mod',
  'go.sum',
  // Add more as needed
]);

/**
 * Priority levels for file analysis (1 = highest, 5 = lowest)
 * Used to determine the order of file processing and ensure critical files
 * are analyzed within token limits.
 */
export type PriorityLevel = 1 | 2 | 3 | 4 | 5;

// File priority patterns for analysis ordering
export const FILE_PRIORITY_PATTERNS: Record<number, Set<string>> = {
  1: new Set([
    // Highest priority - Package management and core config files
    'package.json',
    'package-lock.json',
    'yarn.lock',
    'pnpm-lock.yaml',
    'requirements.txt',
    'Pipfile',
    'Pipfile.lock',
    'Gemfile',
    'Gemfile.lock',
    'composer.json',
    'composer.lock',
    'tsconfig.json',
    'tsconfig.*.json',
    'jsconfig.json',
    'webpack.config.*',
    'vite.config.*',
    'rollup.config.*',
    'next.config.*',
    'nuxt.config.*',
    'angular.json',
    'main.*',
    'index.*',
  ]),
  2: new Set([
    // High priority - Configuration files
    '.eslintrc*',
    '.prettierrc*',
    '.babelrc*',
    'jest.config.*',
    'cypress.config.*',
    'vitest.config.*',
    'postcss.config.*',
    'tailwind.config.*',
    'docker-compose.*',
    'Dockerfile',
    '.dockerignore',
  ]),
  3: new Set(
    [
      // Medium priority - Source code files (excluding test files)
      '.ts',
      '.js',
      '.jsx',
      '.tsx',
      '.mjs',
      '.cjs',
      '.py',
      '.rb',
      '.php',
      '.java',
      '.go',
      '.rs',
      '.cs',
      '.cpp',
      '.c',
      '.h',
      '.hpp',
      'd.ts',
    ].filter((ext) => !ext.includes('test') && !ext.includes('spec'))
  ),
  4: new Set([
    // Lower priority - Test files and large generated files
    '.test.*',
    '.spec.*',
    '*test.*',
    '*spec.*',
    '__tests__/*',
    'test/*',
    'tests/*',
    '.min.js',
    '.bundle.js',
    '.generated.*',
    'dist/*',
    'build/*',
  ]),
  5: new Set([
    // Lowest priority - Documentation and auxiliary files
    '.md',
    '.mdx',
    '.txt',
    '.rst',
    'README*',
    'CHANGELOG*',
    'LICENSE*',
    'CONTRIBUTING*',
    '.gitignore',
    '.npmignore',
  ]),
};
